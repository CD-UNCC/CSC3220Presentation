package db;

import java.util.Collections;
import java.util.HashMap;
import java.util.Vector;

enum Risk {HIGH, MEDIUM, LOW, NA};

public class Restaurant {
	public int businessID;
	public String name;
	public int ZIP;
	public Vector<Review> reviews;
	public HashMap<String, Inspection> inspections;
	
	public int inspHi;
	public int inspMed;
	public int inspAvg;
	public int inspLo;
	
	public int revHi;
	public int revMed;
	public int revAvg;
	public int revLo;
	
	public Restaurant (int b, String n, int z, Inspection i) {
		inspections = new HashMap<String, Inspection>();
		reviews = new Vector<Review>();
		businessID = b;
		name = n;
		ZIP = z;
	}
	
	public boolean addInspection(String id, String score, String risk) {
		
		Integer Iscore;
		Risk r;
		try { Iscore = Integer.parseInt(score);} catch (NumberFormatException e) {return false;}
		if (id == null)
			return false;
		switch(risk) {
		case "High Risk":
			r = Risk.HIGH;
			break;
		case "Moderate Risk":
			r = Risk.MEDIUM;
			break;
		case "Low Risk":
			r = Risk.LOW;
			break;
		default:
			r = Risk.NA;
			break;
		}
		
		Inspection i = new Inspection(id, Iscore, r);
		
		inspections.put(id, i);
		
		if (Iscore > inspHi)
			inspHi = Iscore;
		else if (Iscore < inspLo)
			inspLo = Iscore;
		calcInsMedian();
		
		
		return true;
	}
	
	private void calcInsMedian() {
		Vector<Integer> v = new Vector<Integer>();
		for (Inspection i : inspections.values()){
			v.addElement(i.inspectionScore);
		}
		Collections.sort(v);
		
		if (v.size() % 2 == 0) {
			int vs = (v.size() / 2);
			int v1 = v.elementAt(vs - 1);
			int v2 = v.elementAt(vs);
			inspMed =  (v1 + v2) / 2;
		} else {
			int vs = (v.size() + 1) / 2;
			inspMed = v.elementAt(vs);
		}	
	}
	
	private void calcRevMedian() {
		Vector<Integer> v = new Vector<Integer>();
		for (Review i : reviews){
			v.addElement(i.reviewScore);
		}
		Collections.sort(v);
		
		if (v.size() % 2 == 0) {
			int vs = (v.size() / 2);
			int v1 = v.elementAt(vs - 1);
			int v2 = v.elementAt(vs);
			revMed =  (v1 + v2) / 2;
		} else {
			int vs = (v.size() + 1) / 2;
			revMed = v.elementAt(vs);
		}	
	}
	
	class Inspection {
		public String inspectionID;
		public int inspectionScore;
		public Risk riskFactor;
		
		public Inspection (String ID, int sc, Risk r){
			inspectionID = ID;
			inspectionScore = sc;
			riskFactor = r;
		}
	}
	class Review {
		public String review;
		public int reviewScore;
		
		public Review(String r, int s) {
			review = r;
			reviewScore = s;
		}
	}
}
